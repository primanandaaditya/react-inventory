[{"/home/nanda/Documents/react-inventory/src/index.js":"1","/home/nanda/Documents/react-inventory/src/App.js":"2","/home/nanda/Documents/react-inventory/src/reportWebVitals.js":"3","/home/nanda/Documents/react-inventory/src/jenis_produk/JenisProduk.jsx":"4","/home/nanda/Documents/react-inventory/src/komponen/Nav.jsx":"5","/home/nanda/Documents/react-inventory/src/home/Home.jsx":"6","/home/nanda/Documents/react-inventory/src/config/Endpoint.jsx":"7","/home/nanda/Documents/react-inventory/src/jenis_produk/AddJenisProduk.jsx":"8","/home/nanda/Documents/react-inventory/src/komponen/Loading.jsx":"9","/home/nanda/Documents/react-inventory/src/jenis_produk/EditJenisProduk.jsx":"10","/home/nanda/Documents/react-inventory/src/produk/Produk.jsx":"11","/home/nanda/Documents/react-inventory/src/produk/AddProduk.jsx":"12","/home/nanda/Documents/react-inventory/src/produk/EditProduk.jsx":"13"},{"size":1807,"mtime":1630064859501,"results":"14","hashOfConfig":"15"},{"size":407,"mtime":1629952353981,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1629909649890,"results":"17","hashOfConfig":"15"},{"size":3191,"mtime":1629968387210,"results":"18","hashOfConfig":"15"},{"size":2364,"mtime":1630052989639,"results":"19","hashOfConfig":"15"},{"size":229,"mtime":1629952407344,"results":"20","hashOfConfig":"15"},{"size":312,"mtime":1630054321654,"results":"21","hashOfConfig":"15"},{"size":2674,"mtime":1629964811369,"results":"22","hashOfConfig":"15"},{"size":519,"mtime":1629962266738,"results":"23","hashOfConfig":"15"},{"size":3570,"mtime":1629972300556,"results":"24","hashOfConfig":"15"},{"size":3391,"mtime":1630053100612,"results":"25","hashOfConfig":"15"},{"size":5924,"mtime":1630052550990,"results":"26","hashOfConfig":"15"},{"size":6384,"mtime":1630048630242,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lrvth9",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},"/home/nanda/Documents/react-inventory/src/index.js",[],"/home/nanda/Documents/react-inventory/src/App.js",[],["60","61"],"/home/nanda/Documents/react-inventory/src/reportWebVitals.js",[],"/home/nanda/Documents/react-inventory/src/jenis_produk/JenisProduk.jsx",[],"/home/nanda/Documents/react-inventory/src/komponen/Nav.jsx",["62","63","64"],"import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nclass Nav extends React.Component{\n    render() {\n\n        return (\n            <div>\n\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                    <div className=\"container-fluid\">\n                        <a className=\"navbar-brand\">Inventory</a>\n                        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n                                data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                                aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                                <li className=\"nav-item\">\n                                    <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\n                                </li>\n\n                                <li className=\"nav-item dropdown\">\n                                    <a className=\"nav-link dropdown-toggle\"  id=\"navbarDropdown\" role=\"button\"\n                                       data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                        File\n                                    </a>\n                                    <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                        <li><Link className=\"dropdown-item\" to=\"/jenis_produk\">Jenis produk</Link></li>\n                                        <li><Link className=\"dropdown-item\" to=\"/produk\">Produk</Link></li>\n                                        <li>\n                                            <hr className=\"dropdown-divider\"/>\n                                        </li>\n                                        <li><a className=\"dropdown-item\">Something else here</a></li>\n                                    </ul>\n                                </li>\n\n                            </ul>\n\n                        </div>\n                    </div>\n                </nav>\n                <br/>\n            </div>\n        )\n    }\n}\nexport default Nav;","/home/nanda/Documents/react-inventory/src/home/Home.jsx",[],"/home/nanda/Documents/react-inventory/src/config/Endpoint.jsx",[],"/home/nanda/Documents/react-inventory/src/jenis_produk/AddJenisProduk.jsx",["65","66","67"],"import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport Nav from \"../komponen/Nav\";\nimport {  useForm, SubmitHandler } from \"react-hook-form\";\nimport Endpoint from \"../config/Endpoint\";\nimport {Link} from \"react-router-dom\";\nimport Loading from \"../komponen/Loading\";\n\nexport default function  AddJenisProduk() {\n\n    const [load, setLoad] = useState(false)\n    const [gagal, setGagal] = useState([])\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\n    const onSubmit = data => {\n        setLoad(true)\n        console.log(data)\n        axios.post(Endpoint.BASE_URL + `jenis_produk`,  data )\n            .then(res => {\n                console.log(res.data)\n                if (res.data.status == false){\n                    setGagal(res.data.payload)\n                }else{\n                    setGagal(res.data.message)\n                }\n                setLoad(false)\n                document.getElementById(\"form\").reset();\n\n            })\n    };\n\n    if (load){\n        return (\n            <Loading/>\n        )\n    }else{\n        return(\n            <div>\n                <Nav/>\n                <div className=\"container\">\n                    <div className=\"container-fluid\">\n\n                        <h2>Tambah Jenis Produk</h2>\n\n                        <br/>\n                        <form id=\"form\" onSubmit={handleSubmit(onSubmit)}>\n                            <div className=\"form-floating mb-3\">\n                                <input type=\"text\" {...register(\"nama\",{required:true})} className=\"form-control\" name=\"nama\" id=\"nama\"/>\n                                <label htmlFor=\"nama\">Nama jenis produk</label>\n                            </div>\n                            {errors.nama && <span className=\"invalid-feedback\">Nama harus diisi</span>}\n                            <div className=\"form-floating mb-3\">\n                                <input type=\"text\" {...register(\"keterangan\",{required:true})} name=\"keterangan\" id=\"keterangan\" className=\"form-control\"/>\n                                <label htmlFor=\"keterangan\">Keterangan</label>\n                            </div>\n                            {errors.keterangan && <span className=\"invalid-feedback\">Keterangan harus diisi</span>}\n                            <br/>\n                            <button className=\"btn btn-primary\" type=\"submit\">Simpan</button>\n                            <Link className=\"btn btn-secondary\" to=\"/jenis_produk\">Kembali</Link>\n\n                        </form>\n                        <br/>\n                        { gagal }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n}","/home/nanda/Documents/react-inventory/src/komponen/Loading.jsx",[],"/home/nanda/Documents/react-inventory/src/jenis_produk/EditJenisProduk.jsx",["68","69","70"],"import React, {useEffect, useState} from \"react\";\nimport Nav from \"../komponen/Nav\";\nimport {Link} from \"react-router-dom\";\nimport {  useForm } from \"react-hook-form\";\nimport { useParams} from \"react-router-dom\";\nimport Endpoint from \"../config/Endpoint\";\nimport Loading from \"../komponen/Loading\";\n\nexport default function EditJenisProduk(){\n    const { register, handleSubmit, setValue, watch, formState: { errors } } = useForm();\n    const [load, setLoad] = useState(false)\n    const [gagal, setGagal] = useState([])\n    const {id, setId} =  useParams()\n\n    useEffect(() => {\n        fetch(Endpoint.BASE_URL + 'jenis_produk/detail', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                id: id\n            })\n        })\n            .then(response => response.json())\n            .then(json => {\n                //untuk memberi nilai pada setiap textbox\n                setValue(\"nama\", json.payload.nama);\n                setValue(\"keterangan\", json.payload.keterangan)\n            })\n    }, []);\n\n\n    const onSubmit = data => {\n        setLoad(true)\n        fetch(Endpoint.BASE_URL + 'jenis_produk', {\n            method: 'PUT',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                id: id,\n                nama: data.nama,\n                keterangan: data.keterangan\n            })\n        })\n            .then(response => response.json())\n            .then(json => {\n                console.log(json.message)\n                setGagal(json.message)\n                setLoad(false)\n            })\n    };\n\n    if (load){\n        return (\n            <Loading/>\n        )\n    }else{\n        return(\n            <div>\n                <Nav/>\n                <div className=\"container\">\n                    <div className=\"container-fluid\">\n\n                        <h2>Edit Jenis Produk</h2>\n\n                        <br/>\n                        <form id=\"form\" onSubmit={handleSubmit(onSubmit)}>\n                            <input {...register(\"id\",{required:true})} type=\"hidden\" value={id}/>\n                            <div className=\"form-floating mb-3\">\n                                <input type=\"text\" {...register(\"nama\",{required:true})} className=\"form-control\" name=\"nama\" id=\"nama\"/>\n                                <label htmlFor=\"nama\">Nama jenis produk</label>\n                            </div>\n                            {errors.nama && <span className=\"invalid-feedback\">Nama harus diisi</span>}\n                            <div className=\"form-floating mb-3\">\n                                <input  type=\"text\" {...register(\"keterangan\",{required:true})} name=\"keterangan\" id=\"keterangan\" className=\"form-control\"/>\n                                <label htmlFor=\"keterangan\">Keterangan</label>\n                            </div>\n                            {errors.keterangan && <span className=\"invalid-feedback\">Keterangan harus diisi</span>}\n                            <br/>\n                            <button className=\"btn btn-primary\" type=\"submit\">Update</button>\n                            <Link className=\"btn btn-secondary\" to=\"/jenis_produk\">Kembali</Link>\n\n                        </form>\n                        <br/>\n                        { gagal }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","/home/nanda/Documents/react-inventory/src/produk/Produk.jsx",[],"/home/nanda/Documents/react-inventory/src/produk/AddProduk.jsx",["71","72","73","74","75"],"import React, {useEffect, useState} from \"react\";\nimport Nav from \"../komponen/Nav\";\nimport Endpoint from \"../config/Endpoint\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\nimport Loading from \"../komponen/Loading\";\n\nexport default function AddProduk(){\n\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\n    const [ljenis,setLjenis] = useState([])\n    const [lsatuan,setLsatuan] = useState([])\n    const [load,setLoad] = useState(false)\n    const [message,setMessage]=useState('')\n    const [payload,setPayload]=useState('')\n    const [selectedfile,setSelectedfile]=useState('noimage.png')\n\n    function handleInputChange(event){\n        setSelectedfile(event.target.files[0])\n    }\n\n    const getJenisProduk = () => {\n        axios.get(Endpoint.BASE_URL + `jenis_produk`)\n            .then(res => {\n                console.log(res.data.payload)\n                setLjenis(res.data.payload)\n            })\n    }\n    const getSatuan = () => {\n        axios.get(Endpoint.BASE_URL + `satuan`)\n            .then(res => {\n                console.log(res.data.payload)\n                setLsatuan(res.data.payload)\n            })\n    }\n    const onSubmit = data => {\n        setLoad(true)\n        const fdata = new FormData()\n        fdata.append('nama', data.nama)\n        fdata.append('id_jenis',data.id_jenis)\n        fdata.append('id_satuan',data.id_satuan)\n        fdata.append('hbeli',data.hbeli)\n        fdata.append('gambar',selectedfile)\n\n        axios.post(Endpoint.BASE_URL + `produk`, fdata, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }})\n            .then(res => {\n                setLoad(false)\n                setMessage(res.data.message)\n            })\n    }\n\n\n    useEffect(() => {\n        getJenisProduk()\n        getSatuan()\n    },[])\n\n    if (load){\n        return (\n            <Loading/>\n        )\n    }else{\n        return(\n            <div>\n                <Nav/>\n                <div className=\"container\">\n                    <div className=\"container-fluid\">\n                        <h2>Tambah Produk</h2>\n\n                        <br/>\n\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            <div className=\"form-floating mb-3\">\n                                <input {...register(\"nama\",{required:true})} type=\"text\" className=\"form-control\" id=\"nama\"\n                                       placeholder=\"name@example.com\"/>\n                                <label htmlFor=\"nama\">Nama produk</label>\n                            </div>\n                            {errors.nama && <div className=\"invalid-feedback\">\n                                This field is required\n                            </div>}\n\n                            <div className=\"form-floating mb-3\">\n                                <input {...register(\"hbeli\",{required:true})} type=\"number\" className=\"form-control\" id=\"hbeli\"/>\n                                <label htmlFor=\"nama\">Harga beli (Rp.)</label>\n                            </div>\n                            {errors.hbeli && <span>This field is required</span>}\n\n\n                            <div className=\"form-floating\">\n                                <select {...register(\"id_jenis\",{required:true})} className=\"form-select\" aria-label=\"Default select example\">\n                                    <option selected>Pilih salah satu</option>\n                                    {ljenis.map(x => (\n                                        <option value={x.id}>{x.nama}</option>\n                                    ))}\n                                </select>\n                                <label htmlFor=\"floatingSelect\">Pilih jenis produk</label>\n                            </div>\n                            {errors.id_jenis && <span>This field is required</span>}\n\n\n                            <br/>\n                            <div className=\"form-floating\">\n                                <select {...register(\"id_satuan\",{required:true})} className=\"form-select\" aria-label=\"Default select example\">\n                                    <option selected>Pilih salah satu</option>\n                                    {lsatuan.map(x => (\n                                        <option value={x.id}>{x.nama}</option>\n                                    ))}\n                                </select>\n                                <label htmlFor=\"floatingSelect\">Pilih satuan</label>\n                            </div>\n                            {errors.id_satuan && <span>This field is required</span>}\n\n\n                            <br/>\n                            <div className=\"input-group\">\n                                <input  {...register(\"gambar\",{required:false})} type=\"file\" className=\"form-control\" id=\"gambar\" onChange={handleInputChange}\n                                        aria-describedby=\"inputGroupFileAddon04\" aria-label=\"Upload\"/>\n                            </div>\n\n                            <br/>\n                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                <button type=\"submit\" className=\"btn btn-primary\">Simpan</button>\n                                <Link to=\"/produk\" className=\"btn btn-secondary\">Kembali</Link>\n                            </div>\n\n                        </form>\n\n                        <br/>\n                        { message == '' ?  <div></div> : <div className=\"alert alert-success\" role=\"alert\">\n                            {message}\n                        </div>}\n\n                        { payload == '' ? <div></div> : <div className=\"alert alert-danger\" role=\"alert\">\n                            {payload}\n                        </div>}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n\n}","/home/nanda/Documents/react-inventory/src/produk/EditProduk.jsx",["76","77","78","79","80","81"],"import React, {useEffect, useState} from \"react\";\nimport Nav from \"../komponen/Nav\";\nimport Endpoint from \"../config/Endpoint\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport axios from \"axios\";\nimport {Link, useParams} from \"react-router-dom\";\nimport Loading from \"../komponen/Loading\";\n\n\nexport default function EditProduk(){\n\n    const { register, handleSubmit, setValue, formState: { errors } } = useForm();\n    const [ljenis,setLjenis] = useState([])\n    const [lsatuan,setLsatuan] = useState([])\n    const [load,setLoad] = useState(false)\n    const [message,setMessage]=useState('')\n    const [payload,setPayload]=useState('')\n    const {id, setId} =  useParams() ///untuk get param id yang dilemparkan\n    const [foto,setFoto] = useState('')\n\n    useEffect(() => {\n        getJenisProduk()\n        getSatuan()\n\n        fetch(Endpoint.BASE_URL + 'produk/detail', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                id: id\n            })\n        })\n            .then(response => response.json())\n            .then(json => {\n                setValue(\"nama\", json.payload.nama);\n                setValue(\"id_jenis\", json.payload.id_jenis)\n                setValue(\"id_satuan\", json.payload.id_satuan)\n                setValue(\"hbeli\", json.payload.hbeli)\n                setFoto(Endpoint.GAMBAR_URL + json.payload.gambar)\n            })\n    }, []);\n\n\n\n    const getJenisProduk = () => {\n        axios.get(Endpoint.BASE_URL + `jenis_produk`)\n            .then(res => {\n                console.log(res.data.payload)\n                setLjenis(res.data.payload)\n            })\n    }\n    const getSatuan = () => {\n        axios.get(Endpoint.BASE_URL + `satuan`)\n            .then(res => {\n                console.log(res.data.payload)\n                setLsatuan(res.data.payload)\n            })\n    }\n    const onSubmit = data => {\n        setLoad(true)\n\n        const fdata = new FormData()\n        fdata.append('id', id)\n        fdata.append('nama', data.nama)\n        fdata.append('id_jenis',data.id_jenis)\n        fdata.append('id_satuan',data.id_satuan)\n        fdata.append('hbeli',data.hbeli)\n        fdata.append('gambar', foto)\n\n        axios.post(Endpoint.BASE_URL + `produk/edit`, fdata, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }})\n            .then(res => {\n                setMessage(res.data.message)\n                setLoad(false)\n            })\n    }\n\n    if (load){\n        return (\n            <Loading/>\n        )\n    }else{\n        return(\n            <div>\n                <Nav/>\n                <div className=\"container\">\n                    <div className=\"container-fluid\">\n                        <h2>Edit Produk</h2>\n\n                        <br/>\n\n                        <form onSubmit={handleSubmit(onSubmit)}>\n\n                            <input {...register(\"id\",{required:true})} type=\"hidden\" value={id}/>\n                            <center>\n                                <img width=\"150\" height=\"150\"  src={ foto }  className=\"img-thumbnail\" alt=\"Tidak ada gambar\"/>\n                            </center>\n\n                            <br/>\n                            <div className=\"form-floating mb-3\">\n                                <input {...register(\"nama\",{required:true})} type=\"text\" className=\"form-control\" id=\"nama\"\n                                       placeholder=\"name@example.com\"/>\n                                <label htmlFor=\"nama\">Nama produk</label>\n                            </div>\n                            {errors.nama && <div className=\"invalid-feedback\">\n                                This field is required\n                            </div>}\n\n                            <div className=\"form-floating mb-3\">\n                                <input {...register(\"hbeli\",{required:true})} type=\"number\" className=\"form-control\" id=\"hbeli\"/>\n                                <label htmlFor=\"nama\">Harga beli (Rp.)</label>\n                            </div>\n                            {errors.hbeli && <span>This field is required</span>}\n\n\n                            <div className=\"form-floating\">\n                                <select {...register(\"id_jenis\",{required:true})} className=\"form-select\" aria-label=\"Default select example\">\n                                    <option selected>Pilih salah satu</option>\n                                    {ljenis.map(x => (\n                                        <option value={x.id}>{x.nama}</option>\n                                    ))}\n                                </select>\n                                <label htmlFor=\"floatingSelect\">Pilih jenis produk</label>\n                            </div>\n                            {errors.id_jenis && <span>This field is required</span>}\n\n\n                            <br/>\n                            <div className=\"form-floating\">\n                                <select {...register(\"id_satuan\",{required:true})} className=\"form-select\" aria-label=\"Default select example\">\n                                    <option selected>Pilih salah satu</option>\n                                    {lsatuan.map(x => (\n                                        <option value={x.id}>{x.nama}</option>\n                                    ))}\n                                </select>\n                                <label htmlFor=\"floatingSelect\">Pilih satuan</label>\n                            </div>\n                            {errors.id_satuan && <span>This field is required</span>}\n\n                            <br/>\n                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                <button type=\"submit\" className=\"btn btn-primary\">Simpan</button>\n                                <Link to=\"/produk\" className=\"btn btn-secondary\">Kembali</Link>\n                            </div>\n\n                        </form>\n\n                        <br/>\n                        { message == '' ?  <div></div> : <div className=\"alert alert-success\" role=\"alert\">\n                            {message}\n                        </div>}\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n\n}",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":12,"column":25,"nodeType":"88","endLine":12,"endColumn":53},{"ruleId":"86","severity":1,"message":"87","line":25,"column":37,"nodeType":"88","endLine":26,"endColumn":88},{"ruleId":"86","severity":1,"message":"87","line":35,"column":45,"nodeType":"88","endLine":35,"endColumn":74},{"ruleId":"89","severity":1,"message":"90","line":4,"column":20,"nodeType":"91","messageId":"92","endLine":4,"endColumn":33},{"ruleId":"89","severity":1,"message":"93","line":13,"column":37,"nodeType":"91","messageId":"92","endLine":13,"endColumn":42},{"ruleId":"94","severity":1,"message":"95","line":20,"column":37,"nodeType":"96","messageId":"97","endLine":20,"endColumn":39},{"ruleId":"89","severity":1,"message":"93","line":10,"column":47,"nodeType":"91","messageId":"92","endLine":10,"endColumn":52},{"ruleId":"89","severity":1,"message":"98","line":13,"column":16,"nodeType":"91","messageId":"92","endLine":13,"endColumn":21},{"ruleId":"99","severity":1,"message":"100","line":32,"column":8,"nodeType":"101","endLine":32,"endColumn":10,"suggestions":"102"},{"ruleId":"89","severity":1,"message":"90","line":4,"column":19,"nodeType":"91","messageId":"92","endLine":4,"endColumn":32},{"ruleId":"89","severity":1,"message":"93","line":11,"column":37,"nodeType":"91","messageId":"92","endLine":11,"endColumn":42},{"ruleId":"89","severity":1,"message":"103","line":16,"column":20,"nodeType":"91","messageId":"92","endLine":16,"endColumn":30},{"ruleId":"94","severity":1,"message":"95","line":133,"column":35,"nodeType":"96","messageId":"97","endLine":133,"endColumn":37},{"ruleId":"94","severity":1,"message":"95","line":137,"column":35,"nodeType":"96","messageId":"97","endLine":137,"endColumn":37},{"ruleId":"89","severity":1,"message":"90","line":4,"column":19,"nodeType":"91","messageId":"92","endLine":4,"endColumn":32},{"ruleId":"89","severity":1,"message":"104","line":17,"column":12,"nodeType":"91","messageId":"92","endLine":17,"endColumn":19},{"ruleId":"89","severity":1,"message":"103","line":17,"column":20,"nodeType":"91","messageId":"92","endLine":17,"endColumn":30},{"ruleId":"89","severity":1,"message":"98","line":18,"column":16,"nodeType":"91","messageId":"92","endLine":18,"endColumn":21},{"ruleId":"99","severity":1,"message":"100","line":43,"column":8,"nodeType":"101","endLine":43,"endColumn":10,"suggestions":"105"},{"ruleId":"94","severity":1,"message":"95","line":153,"column":35,"nodeType":"96","messageId":"97","endLine":153,"endColumn":37},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'SubmitHandler' is defined but never used.","Identifier","unusedVar","'watch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'setValue'. Either include them or remove the dependency array.","ArrayExpression",["108"],"'setPayload' is assigned a value but never used.","'payload' is assigned a value but never used.",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"110","fix":"112"},"Update the dependencies array to be: [id, setValue]",{"range":"113","text":"114"},{"range":"115","text":"114"},[1156,1158],"[id, setValue]",[1527,1529]]